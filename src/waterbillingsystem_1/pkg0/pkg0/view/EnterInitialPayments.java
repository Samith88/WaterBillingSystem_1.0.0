/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package waterbillingsystem_1.pkg0.pkg0.view;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.WindowConstants;
import waterbillingsystem_1.pkg0.pkg0.DateDetails;
import waterbillingsystem_1.pkg0.pkg0.JOptionPaneCustom;
import waterbillingsystem_1.pkg0.pkg0.Validations;
import waterbillingsystem_1.pkg0.pkg0.VariableStorage;
import waterbillingsystem_1.pkg0.pkg0.base.InitialPayment;
import waterbillingsystem_1.pkg0.pkg0.controller.FillGUIComponents;
import waterbillingsystem_1.pkg0.pkg0.controller.InitialPaymentProcessor;

/**
 *
 * @author UDISSSA1
 */
public class EnterInitialPayments extends javax.swing.JFrame {

    boolean dataInserted;    
    boolean dataUpdate;
    double initialPayments[] = new double[2];
    /**
     * Creates new form EnterInitialCustomerPayments
     * @throws java.io.IOException
     */
    public EnterInitialPayments() throws IOException {
        File imageFile = new File(VariableStorage.getBackupGroundImage());
        BufferedImage myImage = ImageIO.read(imageFile);
        this.setContentPane(new ImagePanel(myImage));
        
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        this.setLocationRelativeTo(null);   
        ImageIcon img = new ImageIcon(VariableStorage.getImageIcon());
        this.setIconImage(img.getImage());  
        dataInserted =false;   
        dataUpdate = false;        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private String validateData(){
    
        String errorMessage = "";
        if(txtIPCID.getText().length()==0)
            errorMessage += "Enter a valid customer Id <br>";
        if(txtIPTIP.getText().length()==0 && !dataUpdate)
            errorMessage += "Enter a valid total initial payment <br>";
        if(txtIPNewPayment.getText().length()==0 && !dataUpdate)
            errorMessage += "Enter a valid newly received payment <br>";     
        
        return errorMessage;
    } 
    
    private void WhenEnterDataClicked(){

        InitialPayment initialPayment = new InitialPayment();

        initialPayment.setCid(Validations.getCorrectCID(txtIPCID.getText()));
        initialPayment.setTotalInitialPayment(Double.parseDouble(txtIPTIP.getText()));
        initialPayment.setNewlyReceivedPyament(Double.parseDouble(txtIPNewPayment.getText()));
        if(!txtIPRemaining.getText().equals(""))
            initialPayment.setRemainingInitialPayment(Double.parseDouble(txtIPRemaining.getText())-Double.parseDouble(txtIPNewPayment.getText()));
        else
            initialPayment.setRemainingInitialPayment( Double.parseDouble(txtIPTIP.getText()) - Double.parseDouble(txtIPNewPayment.getText()) );
        initialPayment.setDate(DateDetails.getDateYear()+DateDetails.getDateMonth()+DateDetails.getDateDate());

        if(dataUpdate && !dataInserted)
        {
            UpdateInitialPayment(initialPayment);
        }
        else if(!dataInserted)
        {
            InsertInitialPayment(initialPayment);
        }         
        
    }    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIPTIP = new javax.swing.JLabel();
        txtIPTIP = new javax.swing.JTextField();
        txtIPNewPayment = new javax.swing.JTextField();
        lblIPNewRP = new javax.swing.JLabel();
        lblIPCID = new javax.swing.JLabel();
        txtIPCID = new javax.swing.JTextField();
        lblIPRemaining = new javax.swing.JLabel();
        txtIPRemaining = new javax.swing.JTextField();
        UDLabelMain = new javax.swing.JLabel();
        btnIPEnter = new javax.swing.JButton();
        btnUPUpdate = new javax.swing.JButton();
        btnIPClear = new javax.swing.JButton();
        btnIPEnterAnother = new javax.swing.JButton();
        btnCDHome = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lblIPTIP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblIPTIP.setText("Total Initial Payment *");

        txtIPTIP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtIPTIPMouseClicked(evt);
            }
        });
        txtIPTIP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIPTIPKeyTyped(evt);
            }
        });

        txtIPNewPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIPNewPaymentKeyTyped(evt);
            }
        });

        lblIPNewRP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblIPNewRP.setText("Newly Received Payment *");

        lblIPCID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblIPCID.setText("Customer Id *");

        txtIPCID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIPCIDKeyTyped(evt);
            }
        });

        lblIPRemaining.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblIPRemaining.setText("Remaining Payments");

        txtIPRemaining.setEditable(false);
        txtIPRemaining.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIPRemainingKeyTyped(evt);
            }
        });

        UDLabelMain.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        UDLabelMain.setText("Initial Payments Data Form");

        btnIPEnter.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnIPEnter.setText("Enter Payment");
        btnIPEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIPEnterActionPerformed(evt);
            }
        });

        btnUPUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        btnUPUpdate.setBorder(null);
        btnUPUpdate.setBorderPainted(false);
        btnUPUpdate.setContentAreaFilled(false);
        btnUPUpdate.setFocusPainted(false);
        btnUPUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUPUpdateActionPerformed(evt);
            }
        });

        btnIPClear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnIPClear.setText(" Clear Data");
        btnIPClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIPClearActionPerformed(evt);
            }
        });

        btnIPEnterAnother.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnIPEnterAnother.setText("Another Payment");
        btnIPEnterAnother.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIPEnterAnotherActionPerformed(evt);
            }
        });

        btnCDHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home_button.png"))); // NOI18N
        btnCDHome.setBorder(null);
        btnCDHome.setBorderPainted(false);
        btnCDHome.setContentAreaFilled(false);
        btnCDHome.setFocusPainted(false);
        btnCDHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCDHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUPUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(UDLabelMain)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnIPClear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnIPEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(btnIPEnterAnother))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblIPNewRP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblIPTIP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblIPCID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblIPRemaining, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtIPTIP, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                                    .addComponent(txtIPCID)
                                    .addComponent(txtIPNewPayment)
                                    .addComponent(txtIPRemaining))))
                        .addGap(77, 77, 77))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCDHome, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnCDHome)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UDLabelMain)
                    .addComponent(btnUPUpdate))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIPCID)
                    .addComponent(txtIPCID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIPTIP)
                    .addComponent(txtIPTIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIPNewRP)
                    .addComponent(txtIPNewPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIPRemaining)
                    .addComponent(txtIPRemaining, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIPEnter)
                    .addComponent(btnIPClear)
                    .addComponent(btnIPEnterAnother))
                .addContainerGap(111, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIPTIPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIPTIPKeyTyped

        FillGUIComponents.setNumberOnlyTextBox(evt);
    }//GEN-LAST:event_txtIPTIPKeyTyped

    private void txtIPNewPaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIPNewPaymentKeyTyped

        FillGUIComponents.setNumberOnlyTextBox(evt);
    }//GEN-LAST:event_txtIPNewPaymentKeyTyped

    private void txtIPCIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIPCIDKeyTyped

        FillGUIComponents.setNumberOnlyTextBox(evt);
    }//GEN-LAST:event_txtIPCIDKeyTyped

    private void txtIPRemainingKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIPRemainingKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIPRemainingKeyTyped

    private void btnIPEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIPEnterActionPerformed
        String errorMessage = validateData();
        if (0 < errorMessage.length())
            JOptionPaneCustom.infoBox(errorMessage, "Initial Payment Data Insertion");
        else
            WhenEnterDataClicked();
    }//GEN-LAST:event_btnIPEnterActionPerformed

    private void btnUPUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUPUpdateActionPerformed

        if (!dataUpdate && !dataInserted)
            dataUpdate = true;
            
        String errorMessage = validateData();
        if(0 < errorMessage.length())
            JOptionPaneCustom.errorBox(errorMessage, "Initial Payment Data Insertion");
        else  
            whenUpdateButtonClicked();
    }//GEN-LAST:event_btnUPUpdateActionPerformed

    private void btnIPClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIPClearActionPerformed

        if(dataInserted)
            ClearComponents();
        else
            JOptionPaneCustom.errorBox("Current Insertion Not Completed", "Initial Payment Data Insertion");     
    }//GEN-LAST:event_btnIPClearActionPerformed

    private void btnIPEnterAnotherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIPEnterAnotherActionPerformed
        if(dataInserted)
        {
            ClearComponents();
            dataInserted = false;
            initialPayments = null;
        }
        else
            JOptionPaneCustom.errorBox("Current insertion not completed", "Initial Payment data Insertion");

    }//GEN-LAST:event_btnIPEnterAnotherActionPerformed

    private void btnCDHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCDHomeActionPerformed
        // TODO add your handling code here:
        MainPage mainPage = null;
        try {
            mainPage = new MainPage();
        } catch (IOException ex) {
            Logger.getLogger(EnterUnitPrice.class.getName()).log(Level.SEVERE, null, ex);
        }
        mainPage.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnCDHomeActionPerformed

    private void txtIPTIPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIPTIPMouseClicked
        // TODO add your handling code here:
        if(!txtIPCID.getText().equals(""))
        {
                if("".equals(txtIPTIP.getText()))
                {
                    InitialPaymentProcessor initialPaymentProcessor=new InitialPaymentProcessor();
                    try {
                        double initialPayments[] = initialPaymentProcessor.getCustomerInitialPayment(txtIPCID.getText());
                        txtIPTIP.setText(String.valueOf(initialPayments[0]));
                        txtIPRemaining.setText(String.valueOf(initialPayments[0]-initialPayments[1]));
                    } catch (Exception ex) {
                    Logger.getLogger(EnterInitialPayments.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
        }
    }//GEN-LAST:event_txtIPTIPMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnterInitialPayments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new EnterInitialPayments().setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(EnterInitialPayments.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel UDLabelMain;
    private javax.swing.JButton btnCDHome;
    private javax.swing.JButton btnIPClear;
    private javax.swing.JButton btnIPEnter;
    private javax.swing.JButton btnIPEnterAnother;
    private javax.swing.JButton btnUPUpdate;
    private javax.swing.JLabel lblIPCID;
    private javax.swing.JLabel lblIPNewRP;
    private javax.swing.JLabel lblIPRemaining;
    private javax.swing.JLabel lblIPTIP;
    private javax.swing.JTextField txtIPCID;
    private javax.swing.JTextField txtIPNewPayment;
    private javax.swing.JTextField txtIPRemaining;
    private javax.swing.JTextField txtIPTIP;
    // End of variables declaration//GEN-END:variables

    private void UpdateInitialPayment(InitialPayment initialPayment) {
        InitialPaymentProcessor initialPaymentProcessor=new InitialPaymentProcessor();
        if(initialPaymentProcessor.updateInitialPayment(initialPayment))
        {
            JOptionPaneCustom.infoBox("Initial Payment update successfully", "Initial Payment updating");
            dataInserted = true; 
            ClearComponents();  
            dataUpdate=false;
            btnIPEnter.setText("Enter Payment");    
            txtIPCID.enable();     
            initialPayments = null;
        }
        else
            JOptionPaneCustom.errorBox("Initial Payment updating error", "Initial Payment updating");          
    }

    private void InsertInitialPayment(InitialPayment initialPayment) {
        
        InitialPaymentProcessor initialPaymentProcessor=new InitialPaymentProcessor();
        initialPayments[0] = initialPayment.getTotalInitialPayment();
        initialPayments[1] = initialPayment.getTotalInitialPayment() - initialPayment.getRemainingInitialPayment();
        
        if(initialPaymentProcessor.putInitialPayment(initialPayment) && 
                initialPaymentProcessor.updateCustomerInitialPayment(initialPayments, initialPayment.getCid()) )
        {
            JOptionPaneCustom.infoBox("Initial Payment insertion successfully", "Initial Payment Insertion");
            dataInserted = true; 
            ClearComponents();    
            initialPayments = null;
        }
        else
            JOptionPaneCustom.errorBox("Initial Payment insertion error", "Initial Payment Insertion");            
        
    }

    private void ClearComponents() {
        txtIPCID.setText("");
        txtIPTIP.setText("");
        txtIPNewPayment.setText("");
        txtIPRemaining.setText("");
    }

    private void whenUpdateButtonClicked() {
        InitialPaymentProcessor initialPaymentProcessor=new InitialPaymentProcessor();
        try {
            InitialPayment initialPayment = initialPaymentProcessor.getAInitialPaymentDB(Validations.getCorrectCID(txtIPCID.getText()));

            txtIPCID.disable();
            txtIPTIP.setText(String.valueOf(initialPayment.getTotalInitialPayment()) );
            txtIPNewPayment.setText(String.valueOf(initialPayment.getNewlyReceivedPyament()) );
            txtIPRemaining.setText(String.valueOf(initialPayment.getRemainingInitialPayment()) );

            btnIPEnter.setText("Update Payment");
            dataInserted=false;
            dataUpdate = true;

        } catch (Exception ex) {
            Logger.getLogger(EnterInitialPayments.class.getName()).log(Level.SEVERE, null, ex);
        }          
       
    }
}
