/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package waterbillingsystem_1.pkg0.pkg0.view;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import javax.swing.JFrame;
import waterbillingsystem_1.pkg0.pkg0.controller.CustomerDataProcessor;
import waterbillingsystem_1.pkg0.pkg0.controller.FillGUIComponents;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.WindowConstants;
import waterbillingsystem_1.pkg0.pkg0.JOptionPaneCustom;
import waterbillingsystem_1.pkg0.pkg0.controller.BillDataProcessor;
import waterbillingsystem_1.pkg0.pkg0.controller.generateCustomerInvoice;
import waterbillingsystem_1.pkg0.pkg0.dao.MonthlyBillDB;
/**
 *
 * @author UDISSSA1
 */
public class GenerateInvoice extends javax.swing.JFrame {

    /**
     * Creates new form GenerateInvoice
     */
    HashMap<String, String> customerHash = new HashMap<>(); 
    boolean reportGenerated; 
    
    public GenerateInvoice() throws Exception {
        File imageFile = new File("images\\page.png");
        BufferedImage myImage = ImageIO.read(imageFile);
        this.setContentPane(new ImagePanel(myImage));        
        CustomerDataProcessor customerDataProcessor=new CustomerDataProcessor();
        customerHash = customerDataProcessor.getCustomerCIDNName();        
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        this.setLocationRelativeTo(null);      
        ImageIcon img = new ImageIcon("images\\WaterDrop.png");
        this.setIconImage(img.getImage());   
        reportGenerated =false;   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GILabelMain = new javax.swing.JLabel();
        btnCDHome = new javax.swing.JButton();
        GCRLblCID = new javax.swing.JLabel();
        txtCustomerCID = new javax.swing.JTextField();
        cmbCustomerCID = new javax.swing.JComboBox<>();
        cmbYear = new javax.swing.JComboBox<>();
        GCRLblUnits1 = new javax.swing.JLabel();
        cmbMonth = new javax.swing.JComboBox<>();
        btnGCREnter = new javax.swing.JButton();
        btnGCREnterAnother = new javax.swing.JButton();
        PDLblFname = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pananwala Water Billing System");
        setResizable(false);

        GILabelMain.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        GILabelMain.setText("Generate Customer Invoices");

        btnCDHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home_button.png"))); // NOI18N
        btnCDHome.setBorder(null);
        btnCDHome.setBorderPainted(false);
        btnCDHome.setContentAreaFilled(false);
        btnCDHome.setFocusPainted(false);
        btnCDHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCDHomeActionPerformed(evt);
            }
        });

        GCRLblCID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        GCRLblCID.setText("Customer Id");

        txtCustomerCID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCustomerCIDKeyTyped(evt);
            }
        });

        cmbCustomerCID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select CID" }));
        cmbCustomerCID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCustomerCIDItemStateChanged(evt);
            }
        });

        cmbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035" }));

        GCRLblUnits1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        GCRLblUnits1.setText("Billing Month");

        cmbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01-January", "02-February", "03-March", "04-April", "05-May", "06-June", "07-July", "08-August", "09-September", "10-Octomber", "11-November", "12-December" }));

        btnGCREnter.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnGCREnter.setText("Generate Invoice");
        btnGCREnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGCREnterActionPerformed(evt);
            }
        });

        btnGCREnterAnother.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnGCREnterAnother.setText("Generate Another");
        btnGCREnterAnother.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGCREnterAnotherActionPerformed(evt);
            }
        });

        PDLblFname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        PDLblFname.setText("FName");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(472, Short.MAX_VALUE)
                .addComponent(btnCDHome, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(GILabelMain))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(btnGCREnter, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(btnGCREnterAnother, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GCRLblCID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GCRLblUnits1))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbCustomerCID, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PDLblFname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtCustomerCID, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCDHome)
                .addGap(27, 27, 27)
                .addComponent(GILabelMain)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCustomerCID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GCRLblCID))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCustomerCID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PDLblFname))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GCRLblUnits1)
                    .addComponent(cmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGCREnterAnother)
                    .addComponent(btnGCREnter))
                .addContainerGap(122, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCDHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCDHomeActionPerformed
        // TODO add your handling code here:
        MainPage mainPage = null;
        try {
            mainPage = new MainPage();
        } catch (IOException ex) {
            Logger.getLogger(GenerateInvoice.class.getName()).log(Level.SEVERE, null, ex);
        }
        mainPage.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnCDHomeActionPerformed

    private void txtCustomerCIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerCIDKeyTyped
        // TODO add your handling code here:
        FillGUIComponents.setNumberOnlyTextBox(evt);
        
        FillGUIComponents fillGUIComponents=new FillGUIComponents();
        try {
            fillGUIComponents.LoadCustomerData(customerHash,txtCustomerCID.getText(), cmbCustomerCID);
        } catch (Exception ex) {
            Logger.getLogger(EnterBillData.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_txtCustomerCIDKeyTyped

    private void cmbCustomerCIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCustomerCIDItemStateChanged
        // TODO add your handling code here:
        try{  
            PDLblFname.setText(customerHash.get(cmbCustomerCID.getSelectedItem().toString()));                
        }catch(Exception ex){ex.toString();}
    }//GEN-LAST:event_cmbCustomerCIDItemStateChanged

    private void ClearComponents(){
    
        txtCustomerCID.setText("");
        cmbMonth.setSelectedIndex(0);
        cmbYear.setSelectedIndex(0);
        cmbCustomerCID.removeAllItems();
        cmbCustomerCID.setSelectedItem("Select NIC");
    }
    private void btnGCREnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGCREnterActionPerformed
        // generateJasperReport(File jasperFile,File outFile ,MonthlyBillDetails monthlyBillDetails)
        String errorMessage  = validateData();
        if(0 < errorMessage.length())
            JOptionPaneCustom.errorBox(errorMessage, "Customer invoice generation");
        else
            generateReport();
    }//GEN-LAST:event_btnGCREnterActionPerformed

    private void generateReport(){
        JOptionPaneCustom.infoBox("Invoice "+GenerateCustomerInvoce()+" was generated.", "Customer invoice generation");
        ClearComponents();        
    }
    private String validateData(){
        String errorMessage="";
        
        if(cmbCustomerCID.getSelectedItem().toString().equals("Select CID"))
            errorMessage += "Please select customer id";
        
        return errorMessage;
    }
    private String GenerateCustomerInvoce(){
        String outFileName ="";
        MonthlyBillDB monthlyBillDB=new MonthlyBillDB();
        generateCustomerInvoice generateCustomerinvoice=new generateCustomerInvoice();
        BillDataProcessor billDataProcessor=new BillDataProcessor();
        //String Year = cmbYear.getSelectedItem().toString();
        //String Month = cmbMonth.getSelectedItem().toString().split("-")[0];
                
        try {
            outFileName = generateCustomerinvoice.generateJasperReport
            ("waterBilling.jrxml", billDataProcessor.getBillId
            (txtCustomerCID.getText(),cmbYear.getSelectedItem().toString(),cmbMonth.getSelectedItem().toString().split("-")[0]), 
            monthlyBillDB.getMonthlyBillDetailsByInvoiceNo(billDataProcessor.getBillId(txtCustomerCID.getText(),
            cmbYear.getSelectedItem().toString(),cmbMonth.getSelectedItem().toString().split("-")[0])));
            
        } catch (Exception ex) {
            JOptionPaneCustom.errorBox("Invoice generation error", "Customer Invoice Generation ");
            Logger.getLogger(GenerateInvoice.class.getName()).log(Level.SEVERE, null, ex);
        }  
        reportGenerated =true;
        return outFileName;
    }
    private void btnGCREnterAnotherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGCREnterAnotherActionPerformed
        // TODO add your handling code here:

        if(reportGenerated)
        {
            ClearComponents();
            reportGenerated = false;
        }
        else
            JOptionPaneCustom.errorBox("Current generation not completed", "Customer Invoice Generation ");           
    }//GEN-LAST:event_btnGCREnterAnotherActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenerateInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new GenerateInvoice().setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(GenerateInvoice.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel GCRLblCID;
    private javax.swing.JLabel GCRLblUnits1;
    private javax.swing.JLabel GILabelMain;
    private javax.swing.JLabel PDLblFname;
    private javax.swing.JButton btnCDHome;
    private javax.swing.JButton btnGCREnter;
    private javax.swing.JButton btnGCREnterAnother;
    private javax.swing.JComboBox<String> cmbCustomerCID;
    private javax.swing.JComboBox<String> cmbMonth;
    private javax.swing.JComboBox<String> cmbYear;
    private javax.swing.JTextField txtCustomerCID;
    // End of variables declaration//GEN-END:variables
}
